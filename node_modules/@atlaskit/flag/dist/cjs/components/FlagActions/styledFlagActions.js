"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledButton = exports.Action = exports.default = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _theme = require("@atlaskit/theme");

var _button = _interopRequireDefault(require("@atlaskit/button"));

var _theme2 = require("../../theme");

/* eslint-disable no-confusing-arrow */
// Outputs the styles for actions separator: mid-dot for non-bold flags, or space for bold flags.
var getDivider = function getDivider(_ref) {
  var hasDivider = _ref.hasDivider,
      useMidDot = _ref.useMidDot;
  return (0, _styledComponents.css)(["\n  display: ", ";\n  content: \"", "\";\n  width: ", "px;\n"], hasDivider ? 'inline-block' : 'none', useMidDot ? "\xB7" : '', useMidDot ? _theme.math.multiply(_theme.gridSize, 2) : _theme.gridSize);
};

var _default = _styledComponents.default.div.withConfig({
  displayName: "styledFlagActions",
  componentId: "sc-11oivld-0"
})(["\n  display: flex;\n  flex-wrap: wrap;\n  padding-top: ", "px;\n"], _theme.gridSize);

exports.default = _default;

var Action = _styledComponents.default.div.withConfig({
  displayName: "styledFlagActions__Action",
  componentId: "sc-11oivld-1"
})(["\n  &::before {\n    color: ", ";\n    text-align: center;\n    vertical-align: middle;\n\n    ", ";\n  }\n"], _theme2.flagTextColor, getDivider);

exports.Action = Action;
var StyledButton = (0, _styledComponents.default)(_button.default).withConfig({
  displayName: "styledFlagActions__StyledButton",
  componentId: "sc-11oivld-2"
})(["\n  &,\n  a& {\n    font-weight: 500;\n    padding: 0 ", "px !important;\n    &:focus {\n      box-shadow: 0 0 0 2px ", ";\n    }\n  }\n"], function (p) {
  return p.appearance === 'link' ? 0 : (0, _theme.gridSize)();
}, _theme2.flagFocusRingColor);
exports.StyledButton = StyledButton;