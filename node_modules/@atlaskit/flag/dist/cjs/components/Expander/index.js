"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _styledExpander = _interopRequireDefault(require("./styledExpander"));

var Expander =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Expander, _Component);

  function Expander() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Expander);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Expander)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "props", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "state", {
      isAnimating: false
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "handleTransitionEnd", function () {
      _this.setState({
        isAnimating: false
      });
    });
    return _this;
  }

  (0, _createClass2.default)(Expander, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.isExpanded !== nextProps.isExpanded) {
        this.setState({
          isAnimating: true
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          isExpanded = _this$props.isExpanded;
      var isAnimating = this.state.isAnimating; // Need to always render the ExpanderInternal otherwise the
      // reveal transiton doesn't happen. We can't use CSS animation for
      // the the reveal because we don't know the height of the content.

      var childrenIfExpanded = isAnimating || isExpanded ? children : null;
      return _react.default.createElement(_styledExpander.default, {
        "aria-hidden": !isExpanded,
        isExpanded: isExpanded,
        onTransitionEnd: this.handleTransitionEnd
      }, childrenIfExpanded);
    }
  }]);
  return Expander;
}(_react.Component);

exports.default = Expander;
(0, _defineProperty2.default)(Expander, "defaultProps", {
  isExpanded: false
});